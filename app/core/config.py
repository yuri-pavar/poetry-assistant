from pathlib import Path


BASE_DIR = Path(__file__).resolve().parent.parent.parent
DATA_PATH = BASE_DIR / "data" / "russianPoetryWithTheme_deduped.csv"
CHROMA_DIR = str(BASE_DIR / "data" / "chroma_dir2")

SYSTEM_PROMPT = (
    "Ты виртуальный ассистент. Твоя задача - помогать людям с поэзией, отвечая на их запросы."
)

USER_PROMPT_NER = '''
Ты — помощник по анализу русской поэзии.
Из запроса пользователя выдели имена авторов и названия стихотворений, если они явно упоминаются.
Ответ верни строго в JSON-формате с двумя полями:
- "authors": список ФИО авторов (только фамилия и имя, без отчества), если они явно упоминаются в запросе
- "poems": список названий стихотворений, если они явно упоминаются в запросе. Если в запросе нет явных названий стихотворений, ничего не пиши!

Не пиши ничего, кроме JSON. Если ничего не найдено — верни пустые списки.
**Не добавляй ни одного автора или названия по смыслу, теме или ассоциации. Только то, что явно названо.**

Пример стуктуры ответа:
{{
  "authors": ["Александр Пушкин", "Михаил Лермонтов"],
  "poems": ["К Чаадаеву", "Бородино"]
}}

Запрос: {query}
Ответ:
'''

USER_PROMPT_REWRITING = '''
Ты — помощник по тематике русской поэзии.
На основе запроса пользователя сформулируй ключевые образы и ассоциации, связанные с его смыслом. Это могут быть чувства, образы природы, исторические мотивы и т.п.
Ответ верни строго в JSON-формате с одним полем:
- "keywords": список ключевых слов или фраз, которые помогут найти релевантные стихи.

**Не пиши ничего, кроме JSON. Если образы не подобрать — верни пустой список.**

Пример:
{{
  "keywords": ["осень", "листья", "тоска", "разлука"]
}}

Запрос: {query}
Ответ:
'''

USER_PROMPT_MAIN = '''
Ты — виртуальный ассистент, помогающий людям находить и интерпретировать русскую поэзию.
Ниже приведены отрывки стихотворений, которые могут быть релевантны запросу пользователя. Используй их как источник для вдохновения или цитирования в ответе.
Не выдумывай новых стихов и не приписывай авторам лишнего — работай только с тем, что дано в контексте.
Будь образным, но точным. Если пользователь просит «подборку» — выбери релевантные строки. Если просит «написать стихи» — сочини, вдохновляясь контекстом.

Контекст:
{context}

Запрос пользователя: {query}
Ответ:
'''

USER_PROMPT_POEM = '''
Ты — поэт-ассистент, вдохновляющийся классической русской поэзией.

На основе следующего контекста и запроса пользователя сочини **новое** стихотворение в духе русской поэтической традиции.
Можешь использовать метафоры, эпитеты, ритм, рифму — всё, что придаёт тексту поэтичность.
Если в контексте есть строки из известных произведений — можешь вдохновляться ими, но **не копируй** дословно и не цитируй.

Контекст:
{context}

Запрос пользователя: {query}
Стихотворение:
'''

MODEL_NAME = "t-tech/T-lite-it-1.0"

AUTHORS_COL = 'author'
POEMS_COL = 'name'
TXT_COL = 'text'

VLLM_API_URL = 'http://vllm:8000/v1/chat/completions'
RAG_SERVICE_URL = 'http://rag:8100'